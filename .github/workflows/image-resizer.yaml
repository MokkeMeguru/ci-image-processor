name: player Image resizer

on:
  push:
    branches: [main]
    # paths:
    #  - "galleries/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: "main"
      WATCH_FOLDER: "./gallery"
      CI_MESSAGE: "[CI IMAGE RESIZER]"
      WIDTH: 410
      HEIGT: 536
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [[ -f .github/scripts/image-resizer/requirements.txt ]]; then
            pip install -r .github/scripts/image-resizer/requirements.txt
          fi
      - name: find latest ci commit hash
        run: |
          echo '::set-output name=HASH::${git log --oneline | grep ${{ env.CI_MESSAGE }} | head -n 1 | tr -s " " | cut -d " " -f 1}'
        id: find-latest-ci-commit-hash
      - name: generate files
        run: |
          export hash=${{ steps.find-latest-ci-commit-hash.HASH }}
          if [[ -z $hash ]]; then
            find ${{ env.WATCH_FOLDER }} -type f | grep -v "[0-9]\+x[0-9]\+" | \
            xargs -i python ./.github/scripts/image-resizer/main.py {} ${{ env.WIDTH }} ${{ env.HEIGHT }}
          else
            git diff --name-only --diff-filter=AM 7d3dd9a ${{ env.WATCH_FOLDER }} | grep -v "[0-9]\+x[0-9]\+" | \
            xargs -i python ./.github/scripts/image-resizer/main.py {} ${{ env.WIDTH }} ${{ env.HEIGHT }}
          fi
          echo "::set-output name=count::$(git diff --name-only | wc -l)"
        id: generate-files
      - name: checkout new-branch
        if: steps.generate-files.outputs.count > 0
        run: |
          git checkout -b CI/`git rev-parse HEAD`
          git add .
          git commit -m "${{ env.CI_MESSAGE }}"
      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: ${{ env.TARGET_BRANCH }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
